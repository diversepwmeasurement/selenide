jobs:
  auto-merge-dependabot:
    if: ${{ github.actor == 'dependabot[bot]' }}
    name: "\U0001F916 Auto merge dependabot PR"
    needs:
    - run-tests-on-linux
    - run-tests-on-windows
    - run-android-tests
    - run-ios-tests
    - run-selenoid-tests
    permissions:
      contents: write
      pull-requests: write
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: "\U0001F916 Merge PR from dependabot"
      uses: fastify/github-action-merge-dependabot@v3.10.1
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        merge-method: rebase
        target: minor
    timeout-minutes: 10
  run-android-tests:
    env:
      APPIUM_STARTUP_TIMEOUT_SEC: 30
      APPIUM_TEST_SERVER_HOST: 127.0.0.1
      APPIUM_TEST_SERVER_PORT: 4723
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout
      uses: actions/checkout@v4
    - continue-on-error: true
      name: AVD cache
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-android-tests-${{ hashFiles('**/*.zip*') }}
        path: 'build/apps

          ~/.android/avd/*

          ~/.android/adb*

          '
        restore-keys: '${{ runner.os }}-android-tests-

          '
    - continue-on-error: true
      name: Setup NodeJS
      uses: actions/setup-node@v4
      with:
        node-version: '20'
    - continue-on-error: true
      name: Install Appium
      run: 'npm install -g appium

        npm install -g appium-doctor

        '
    - continue-on-error: true
      name: Start Appium server
      run: 'cwd=$(pwd)

        pushd "$cwd"

        cd ~

        appium driver install uiautomator2

        appium-doctor

        '
    - continue-on-error: true
      name: Enable KVM
      run: 'echo ''KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"''
        | sudo tee /etc/udev/rules.d/99-kvm4all.rules

        sudo udevadm control --reload-rules

        sudo udevadm trigger --name-match=kvm

        '
    - continue-on-error: true
      name: Run tests
      uses: reactivecircus/android-emulator-runner@v2
      with:
        api-level: 29
        disable-animations: true
        emulator-options: -no-snapshot -no-window -no-boot-anim -camera-back emulated
          -camera-front emulated -gpu swiftshader_indirect
        profile: pixel_3_xl
        script: ./gradlew clean android --info
    - continue-on-error: true
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: test-report-android
        path: '**/build/reports

          **/build/test-results

          **/appium.log

          '
  run-ios-tests:
    env:
      APPIUM_STARTUP_TIMEOUT_SEC: 30
      APPIUM_TEST_SERVER_HOST: 127.0.0.1
      APPIUM_TEST_SERVER_PORT: 4723
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Setup iOS simulator
      uses: futureware-tech/simulator-action@v3
      with:
        model: iPhone 15
        os: iOS
        os_version: '17.2'
    - continue-on-error: true
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-ios-tests-${{ hashFiles('**/*.zip*') }}
        path: build/apps
        restore-keys: '${{ runner.os }}-ios-tests-

          '
    - continue-on-error: true
      name: Setup NodeJS
      uses: actions/setup-node@v4
      with:
        node-version: '20'
    - continue-on-error: true
      name: Install Appium
      run: 'npm install -g appium

        npm install -g appium-doctor

        '
    - continue-on-error: true
      name: Log Xcode Version
      run: xcodebuild -version
    - continue-on-error: true
      name: Log Installed Simulators
      run: xcrun simctl list
    - continue-on-error: true
      name: Log Runtimes
      run: xcrun simctl list runtimes
    - continue-on-error: true
      name: Start Appium server
      run: 'cwd=$(pwd)

        pushd "$cwd"

        cd ~

        appium driver install xcuitest

        appium driver install safari

        appium-doctor

        '
    - continue-on-error: true
      name: Set up JDK
      uses: actions/setup-java@v4
      with:
        cache: gradle
        distribution: temurin
        java-version: '17'
    - continue-on-error: true
      name: Run iOS tests
      run: ./gradlew ios --no-daemon --console=plain -i
    - continue-on-error: true
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: test-report-ios
        path: '**/build/reports

          **/build/test-results

          **/appium.log

          '
  run-selenoid-tests:
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout
      uses: actions/checkout@v4
    - continue-on-error: true
      uses: actions/setup-java@v4
      with:
        cache: gradle
        distribution: temurin
        java-version: '17'
    - continue-on-error: true
      name: Start selenoid
      uses: Xotabu4/selenoid-github-action@v2
    - continue-on-error: true
      name: Run integration tests
      uses: gradle/gradle-build-action@v3
      with:
        arguments: selenoidTests
    - continue-on-error: true
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: test-report-selenoid
        path: '**/build/reports

          **/build/test-results

          '
  run-tests-on-linux:
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Set up JDK
      uses: actions/setup-java@v4
      with:
        cache: gradle
        distribution: temurin
        java-version: '17'
    - continue-on-error: true
      if: ${{ matrix.gradle-task != 'check' }}
      name: Setup Firefox
      uses: browser-actions/setup-firefox@latest
    - continue-on-error: true
      name: Build with Gradle
      uses: gradle/gradle-build-action@v3
      with:
        arguments: ${{ matrix.gradle-task }} --no-parallel --no-daemon --console=plain
    - continue-on-error: true
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: test-report-linux-${{matrix.gradle-task}}
        path: '**/build/reports

          **/build/test-results

          '
        retention-days: 14
    strategy:
      fail-fast: false
      matrix:
        gradle-task:
        - check
        - firefox_headless
        - chrome_headless
  run-tests-on-windows:
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Set up JDK
      uses: actions/setup-java@v4
      with:
        cache: gradle
        distribution: temurin
        java-version: '17'
    - continue-on-error: true
      if: ${{ contains(matrix.gradle-task, 'edge') }}
      name: Setup Edge
      uses: browser-actions/setup-edge@latest
    - continue-on-error: true
      name: Set-DisplayResolution
      run: Set-DisplayResolution -Width 1920 -Height 1080 -Force
      shell: pwsh
    - continue-on-error: true
      name: Build with Gradle
      uses: gradle/gradle-build-action@v3
      with:
        arguments: ${{ matrix.gradle-task }} --no-parallel --no-daemon --console=plain
    - continue-on-error: true
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: test-report-win-${{matrix.gradle-task}}
        path: '**/build/reports

          **/build/test-results

          '
        retention-days: 14
    strategy:
      fail-fast: false
      matrix:
        gradle-task:
        - check
        - edge_headless_smoke
name: Run tests
on:
  repository_dispatch:
    types: trigger-ga___test.yml
